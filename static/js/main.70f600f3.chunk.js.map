{"version":3,"sources":["types/login.js","reducer/login.js","reducer/index.js","store/index.js","sagas/index.js","components/LoggedOutHeader/index.js","containers/LoggedOutHeader/index.js","actions/login.js","components/LoggedInHeader/index.js","reducer/login.selector.js","containers/LoggedInHeader/index.js","components/Header/index.js","containers/Header/index.js","components/Movie/index.js","containers/Movie/index.js","components/Container/index.js","views/ListPage/index.js","components/ShareForm/index.js","views/SharePage/index.js","Routes/index.js","Page/index.js","App/index.js","serviceWorker.js","index.js"],"names":["LOGIN","path","LOGOUT","initialUserInfo","email","password","combineReducers","isLoggedIn","state","action","type","userInfo","login","sagaMiddleware","createSagaMiddleware","rootSaga","all","FormItem","Form","Item","LoggedOutHeader","form","onClickLoginAction","onClickLogin","validateFieldsAndScroll","getFieldDecorator","justify","align","gutter","rules","required","message","placeholder","onClick","err","values","defaultProps","create","LoggedInHeaderContainer","mapDispatchToProps","connect","LoggedInHeader","onClickLogout","onClickShare","getIsLoggedIn","console","log","getUserInfo","logout","history","push","withRouter","Title","Typography","Header","onClickLogo","style","background","height","padding","cursor","span","level","color","marginTop","HeaderContainer","Movie","controls","src","fontSize","loggedIn","MovieContainer","Container","children","maxWidth","margin","ListPage","props","Array","fill","map","item","ShareForm","title","label","wrapperCol","labelCol","offset","width","SharePage","exact","component","Page","Routes","store","initialState","middlewares","enhancers","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","rootReducer","compose","runSaga","run","configureStore","Boolean","location","hostname","match","ReactDOM","render","basename","className","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70f600f3.chunk.js","sourcesContent":["const path = \"App/\";\n\nconst LOGIN = path + \"LOGIN\";\nconst LOGOUT = path + \"LOGOUT\";\n\nexport { LOGIN, LOGOUT };\n","import { combineReducers } from \"redux\";\nimport { LOGIN, LOGOUT } from \"../types/login\";\n\nconst isLoggedIn = (state = false, action) => {\n  switch (action.type) {\n    case LOGIN: {\n      return true;\n    }\n    case LOGOUT: {\n      return false;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initialUserInfo = { email: null, password: null };\nconst userInfo = (state = initialUserInfo, action) => {\n  switch (action.type) {\n    case LOGIN: {\n      return {\n        email: action.email,\n        password: action.password\n      };\n    }\n    case LOGOUT: {\n      return initialUserInfo;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  isLoggedIn,\n  userInfo\n});\n","import { combineReducers } from \"redux\";\nimport login from \"./login\";\n\nexport default combineReducers({\n    login\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"../reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [sagaMiddleware];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  window.__REDUX_DEVTOOLS_EXTENSION__ =\n    window.__REDUX_DEVTOOLS_EXTENSION__ ||\n    function(f) {\n      return f;\n    };\n\n  const store = createStore(rootReducer, initialState, compose(...enhancers));\n  store.runSaga = sagaMiddleware.run;\n\n  return store;\n}\n","import { all } from \"redux-saga/effects\";\n\nexport default function* rootSaga() {\n  yield all([]);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Button, Col, Row, Form } from \"antd\";\n\nconst { Item: FormItem } = Form;\n\nfunction LoggedOutHeader({ form, onClickLogin: onClickLoginAction }) {\n  const { validateFieldsAndScroll, getFieldDecorator } = form;\n  const onClickLogin = () => {\n    validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        onClickLoginAction(values);\n      }\n    });\n  };\n  return (\n    <Row type=\"flex\" justify=\"end\" align=\"middle\" gutter={15}>\n      <Col>\n        <FormItem>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                required: true,\n                message: \"Vui lòng nhập email\"\n              },\n              {\n                type: \"email\",\n                message: \"Vui lòng nhập đúng định dạng email\"\n              }\n            ]\n          })(<Input placeholder=\"email\" />)}\n        </FormItem>\n      </Col>\n      <Col>\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"Vui lòng nhập password\"\n              }\n            ]\n          })(<Input placeholder=\"password\" type=\"password\" />)}\n        </FormItem>\n      </Col>\n      <Col>\n        <FormItem>\n          <Button onClick={onClickLogin}>Login / Register</Button>\n        </FormItem>\n      </Col>\n    </Row>\n  );\n}\n\nLoggedOutHeader.propTypes = {\n  onClickLogin: PropTypes.func.isRequired,\n  form: PropTypes.object.isRequired\n};\nLoggedOutHeader.defaultProps = {};\n\nexport default Form.create()(LoggedOutHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport LoggedOutHeader from \"../../components/LoggedOutHeader\";\nimport { login } from \"../../actions/login\";\n\nfunction LoggedInHeaderContainer({ login }) {\n  return <LoggedOutHeader onClickLogin={values => login(values)} />;\n}\n\nconst mapDispatchToProps = {\n  login\n};\n\nLoggedInHeaderContainer.propTypes = {\n  login: PropTypes.func.isRequired\n};\nLoggedInHeaderContainer.defaultProps = {};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(LoggedInHeaderContainer);\n","import { LOGIN, LOGOUT } from \"../types/login\";\n\nconst login = ({ email, password }) => ({\n  type: LOGIN,\n  email,\n  password\n});\n\nconst logout = () => ({\n  type: LOGOUT\n});\n\nexport { login, logout };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row, Button, Form } from \"antd\";\nconst { Item: FormItem } = Form;\n\nfunction LoggedInHeader({ onClickLogout, userInfo, onClickShare }) {\n  return (\n    <Row type=\"flex\" justify=\"end\" align=\"middle\" gutter={15}>\n      <Col>\n        <FormItem>Welcome {userInfo.email}</FormItem>\n      </Col>\n      <Col>\n        <FormItem>\n          <Button onClick={onClickShare}>Share a movie</Button>\n        </FormItem>\n      </Col>\n      <Col>\n        <FormItem>\n          <Button onClick={onClickLogout}>Logout</Button>\n        </FormItem>\n      </Col>\n    </Row>\n  );\n}\nLoggedInHeader.propTypes = {\n  onClickLogout: PropTypes.func.isRequired,\n  onClickShare: PropTypes.func.isRequired,\n  userInfo: PropTypes.object.isRequired\n};\nLoggedInHeader.defaultProps = {};\n\nexport default LoggedInHeader;\n","const getIsLoggedIn = state => {\n  console.log(state);\n  return state.login.isLoggedIn;\n};\nconst getUserInfo = state => state.login.userInfo;\n\nexport { getIsLoggedIn, getUserInfo };\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport LoggedInHeader from \"../../components/LoggedInHeader\";\nimport { logout } from \"../../actions/login\";\nimport { getUserInfo } from \"../../reducer/login.selector\";\n\nfunction LoggedInHeaderContainer({ logout, userInfo, history }) {\n  console.log(history);\n  return (\n    <LoggedInHeader\n      onClickShare={() => {\n        console.log(\"click share\");\n        history.push(\"/share\");\n      }}\n      onClickLogout={logout}\n      userInfo={userInfo}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  userInfo: getUserInfo(state)\n});\n\nconst mapDispatchToProps = {\n  logout\n};\n\nLoggedInHeaderContainer.propTypes = {\n  logout: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\nLoggedInHeaderContainer.defaultProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LoggedInHeaderContainer));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Typography } from \"antd\";\nimport LoggedOutHeader from \"../../containers/LoggedOutHeader\";\nimport LoggedInHeader from \"../../containers/LoggedInHeader\";\n\nconst { Title } = Typography;\n\nfunction Header({ isLoggedIn, onClickLogo }) {\n  return (\n    <nav>\n      <Row\n        style={{ background: \"#40a9ff\", height: 80, padding: \"0 20px\" }}\n        type=\"flex\"\n        justify=\"end\"\n        align=\"middle\"\n      >\n        <Col onClick={onClickLogo} style={{ cursor: \"pointer\" }} span={12}>\n          <Row gutter={15} type=\"flex\" align=\"middle\">\n            <Col>\n              <Title level={4}>Logo</Title>\n            </Col>\n            <Col>\n              <Title style={{ color: \"white\" }} level={3}>\n                Funny Movies\n              </Title>\n            </Col>\n          </Row>\n        </Col>\n        <Col style={{ marginTop: 16 }} span={12}>\n          {isLoggedIn ? <LoggedInHeader /> : <LoggedOutHeader />}\n        </Col>\n      </Row>\n    </nav>\n  );\n}\n\nHeader.propTypes = {\n  isLoggedIn: PropTypes.bool,\n  onClickLogo: PropTypes.func.isRequired\n};\nHeader.defaultProps = {\n  isLoggedIn: false\n};\n\nexport default Header;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Header from \"../../components/Header\";\nimport { getIsLoggedIn } from \"../../reducer/login.selector\";\n\nfunction HeaderContainer({ isLoggedIn, history }) {\n  return (\n    <Header\n      onClickLogo={() => {\n        history.push(\"/\");\n      }}\n      isLoggedIn={isLoggedIn}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nHeaderContainer.propTypes = {};\nHeaderContainer.defaultProps = {};\n\nexport default connect(mapStateToProps)(withRouter(HeaderContainer));\n","import React from \"react\";\nimport { Row, Col, Icon } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nfunction Movie({ isLoggedIn }) {\n  return (\n    <article>\n      <Row gutter={20} type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <Col span={10}>\n          <video\n            controls={true}\n            src=\"https://www.w3schools.com/tags/movie.mp4\"\n          />\n        </Col>\n        <Col span={14}>\n          <h3 style={{ color: \"red\" }}>Movie Title</h3>\n          <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\n            <Col>Shared By: someone@gmail.com</Col>\n            {isLoggedIn && (\n              <Col>\n                <Row gutter={20} type=\"flex\" justify=\"end\" align=\"middle\">\n                  <Col>\n                    <Icon\n                      style={{ cursor: \"pointer\", fontSize: \"2em\" }}\n                      type=\"like\"\n                    />\n                  </Col>\n                  <Col>\n                    <Icon\n                      style={{ cursor: \"pointer\", fontSize: \"2em\" }}\n                      type=\"dislike\"\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            )}\n          </Row>\n          <Row gutter={15} type=\"flex\" justify=\"start\" align=\"middle\">\n            <Col>\n              89 <Icon type=\"like\" />\n            </Col>\n            <Col>\n              12 <Icon type=\"dislike\" />\n            </Col>\n          </Row>\n          <br />\n          <p>Description</p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi metus\n            magna, suscipit ut fermentum sit amet, condimentum sit amet elit.\n            Sed facilisis suscipit luctus. Duis nisi lacus, malesuada ac\n            hendrerit eget, condimentum vitae neque.Fusce mattis, erat ut\n            scelerisque blandit, nisi velit fermentum lacus, ac mattis eros\n            magna id odio.\n          </p>\n        </Col>\n      </Row>\n    </article>\n  );\n}\n\nMovie.propTypes = {\n  isLoggedIn: PropTypes.bool\n};\nMovie.defaultProps = {\n  loggedIn: false\n};\n\nexport default Movie;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Movie from \"../../components/Movie\";\nimport { getIsLoggedIn } from \"../../reducer/login.selector\";\n\nfunction MovieContainer({ isLoggedIn }) {\n  return <Movie isLoggedIn={isLoggedIn} />;\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nMovieContainer.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired\n};\nMovieContainer.defaultProps = {};\n\nexport default connect(mapStateToProps)(MovieContainer);\n","import React from \"react\";\n\nfunction Container({ children }) {\n  return (\n    <section style={{ maxWidth: 800, margin: \"auto\" }}>{children}</section>\n  );\n}\n\nContainer.propTypes = {};\nContainer.defaultProps = {};\n\nexport default Container;\n","import React from \"react\";\nimport Movie from \"../../containers/Movie\";\nimport Container from \"../../components/Container\";\n\nfunction ListPage(props) {\n  return (\n    <Container>\n      {Array(10)\n        .fill(1)\n        .map(item => {\n          return (\n            <>\n              <br />\n              <Movie />\n              <br />\n            </>\n          );\n        })}\n    </Container>\n  );\n}\n\nListPage.propTypes = {};\nListPage.defaultProps = {};\n\nexport default ListPage;\n","import React from \"react\";\nimport { Card, Button, Input, Form } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst { Item } = Form;\n\nfunction ShareForm({ form }) {\n  return (\n    <Card title=\"Share a Youtube movie\">\n      <Item\n        label=\"Youtube URL\"\n        wrapperCol={{ span: 18 }}\n        labelCol={{ span: 6 }}\n      >\n        <Input />\n      </Item>\n      <Item wrapperCol={{ span: 18, offset: 6 }}>\n        <Button style={{ width: \"100%\" }}>Share</Button>\n      </Item>\n    </Card>\n  );\n}\n\nShareForm.propTypes = {\n  form: PropTypes.object.isRequired\n};\nShareForm.defaultProps = {};\n\nexport default Form.create()(ShareForm);\n","import ShareForm from \"../../components/ShareForm\";\n\nimport React from \"react\";\nimport Container from \"../../components/Container\";\n\nfunction SharePage() {\n  return (\n    <Container>\n      <br />\n      <br />\n      <ShareForm />\n      <br />\n    </Container>\n  );\n}\n\nSharePage.propTypes = {};\nSharePage.defaultProps = {};\n\nexport default SharePage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ListPage from \"../views/ListPage\";\nimport SharePage from \"../views/SharePage\";\n\nexport default () => (\n  <Switch>\n    <Route path={\"/\"} exact component={ListPage} />\n    <Route path={\"/share\"} exact component={SharePage} />\n  </Switch>\n);\n","import React from \"react\";\nimport Header from \"../containers/Header\";\n\nimport Routes from \"../Routes\";\n\nfunction Page() {\n  return (\n    <header>\n      <Header isLoggedIn={false} />\n      <Routes />\n    </header>\n  );\n}\n\nPage.propTypes = {};\nPage.defaultProps = {};\n\nexport default Page;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport configureStore from \"../store\";\nimport rootSaga from \"../sagas\";\nimport \"antd/dist/antd.css\";\nimport Page from \"../Page\";\n\nconst store = configureStore({});\nstore.runSaga(rootSaga);\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Router basename={'/videos'}>\n        <div className=\"app\">\n          <Page />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}